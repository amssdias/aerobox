version: "2"

services:
  my-redis:
    image: redis:7.2.4
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    #volumes:
    #  # Mount the custom redis.conf file into the container
    #  - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]

  db:
    image: postgres:17.2-bullseye
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: aerobox-db
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api:
    container_name: aerobox-api
    build:
      context: .
      dockerfile: deployments/development/Dockerfile
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=aerobox-db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_BUCKET_REGION=${AWS_S3_BUCKET_REGION}
      - AWS_S3_BUCKET_FOLDER=${AWS_S3_BUCKET_FOLDER}
      - DJANGO_SETTINGS_MODULE=config.settings.settings_development
      - REDIS_PROTOCOL=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=my-redis
      - REDIS_PORT=6379
      - REDIS_DB_CELERY=${REDIS_DB_CELERY}
    depends_on:
      - db

  celery:
    container_name: celery-worker
    build:
      context: .
      dockerfile: deployments/development/Dockerfile
    depends_on:
      - my-redis
      - api
    volumes:
      - .:/usr/src/app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=chat-app-db
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_HOST=db
      - DB_PORT=3306
      - REDIS_PROTOCOL=${REDIS_PROTOCOL}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=my-redis
      - REDIS_PORT=6379
      - DJANGO_REDIS_CACHE_DB=${DJANGO_REDIS_CACHE_DB}
      - REDIS_DB_CHANNEL=${REDIS_DB_CHANNEL}
      - REDIS_DB_CELERY=${REDIS_DB_CELERY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - DJANGO_SETTINGS_MODULE=config.settings.settings_development
    command: [ "celery", "-A", "config", "worker", "--loglevel=info" ]

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data: